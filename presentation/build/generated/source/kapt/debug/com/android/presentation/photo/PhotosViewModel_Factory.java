// Generated by Dagger (https://dagger.dev).
package com.android.presentation.photo;

import com.android.domain.usecase.GetPhotosUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PhotosViewModel_Factory implements Factory<PhotosViewModel> {
  private final Provider<GetPhotosUseCase> getPhotosUseCaseProvider;

  public PhotosViewModel_Factory(Provider<GetPhotosUseCase> getPhotosUseCaseProvider) {
    this.getPhotosUseCaseProvider = getPhotosUseCaseProvider;
  }

  @Override
  public PhotosViewModel get() {
    return newInstance(getPhotosUseCaseProvider.get());
  }

  public static PhotosViewModel_Factory create(
      Provider<GetPhotosUseCase> getPhotosUseCaseProvider) {
    return new PhotosViewModel_Factory(getPhotosUseCaseProvider);
  }

  public static PhotosViewModel newInstance(GetPhotosUseCase getPhotosUseCase) {
    return new PhotosViewModel(getPhotosUseCase);
  }
}
