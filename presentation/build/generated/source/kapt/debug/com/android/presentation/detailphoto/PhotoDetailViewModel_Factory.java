// Generated by Dagger (https://dagger.dev).
package com.android.presentation.detailphoto;

import com.android.domain.usecase.GetPhotoDetailUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PhotoDetailViewModel_Factory implements Factory<PhotoDetailViewModel> {
  private final Provider<GetPhotoDetailUseCase> getPhotoDetailUseCaseProvider;

  public PhotoDetailViewModel_Factory(
      Provider<GetPhotoDetailUseCase> getPhotoDetailUseCaseProvider) {
    this.getPhotoDetailUseCaseProvider = getPhotoDetailUseCaseProvider;
  }

  @Override
  public PhotoDetailViewModel get() {
    return newInstance(getPhotoDetailUseCaseProvider.get());
  }

  public static PhotoDetailViewModel_Factory create(
      Provider<GetPhotoDetailUseCase> getPhotoDetailUseCaseProvider) {
    return new PhotoDetailViewModel_Factory(getPhotoDetailUseCaseProvider);
  }

  public static PhotoDetailViewModel newInstance(GetPhotoDetailUseCase getPhotoDetailUseCase) {
    return new PhotoDetailViewModel(getPhotoDetailUseCase);
  }
}
