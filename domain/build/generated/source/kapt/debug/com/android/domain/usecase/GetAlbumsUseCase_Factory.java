// Generated by Dagger (https://dagger.dev).
package com.android.domain.usecase;

import com.android.domain.repository.AlbumRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetAlbumsUseCase_Factory implements Factory<GetAlbumsUseCase> {
  private final Provider<AlbumRepository> repositoryProvider;

  public GetAlbumsUseCase_Factory(Provider<AlbumRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetAlbumsUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetAlbumsUseCase_Factory create(Provider<AlbumRepository> repositoryProvider) {
    return new GetAlbumsUseCase_Factory(repositoryProvider);
  }

  public static GetAlbumsUseCase newInstance(AlbumRepository repository) {
    return new GetAlbumsUseCase(repository);
  }
}
