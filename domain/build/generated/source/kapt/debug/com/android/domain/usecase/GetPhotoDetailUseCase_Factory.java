// Generated by Dagger (https://dagger.dev).
package com.android.domain.usecase;

import com.android.domain.repository.PhotoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetPhotoDetailUseCase_Factory implements Factory<GetPhotoDetailUseCase> {
  private final Provider<PhotoRepository> repositoryProvider;

  public GetPhotoDetailUseCase_Factory(Provider<PhotoRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetPhotoDetailUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetPhotoDetailUseCase_Factory create(Provider<PhotoRepository> repositoryProvider) {
    return new GetPhotoDetailUseCase_Factory(repositoryProvider);
  }

  public static GetPhotoDetailUseCase newInstance(PhotoRepository repository) {
    return new GetPhotoDetailUseCase(repository);
  }
}
